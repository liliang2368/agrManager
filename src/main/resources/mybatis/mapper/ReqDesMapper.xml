<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.ReqDesMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.ReqDes">
    <result column="des_id" jdbcType="INTEGER" property="desId" />
    <result column="req_content" jdbcType="VARCHAR" property="reqContent" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="dep_req_op" jdbcType="VARCHAR" property="depReqOp" />
    <result column="be_req_op" jdbcType="VARCHAR" property="beReqOp" />
    <result column="req_state" jdbcType="INTEGER" property="reqState" />
    <result column="produce_id" jdbcType="INTEGER" property="produceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    des_id, req_content, start_time, end_time, dep_req_op, be_req_op, req_state, produce_id
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.ReqDesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from req_des
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.ReqDesExample">
    delete from req_des
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.ReqDes">
    insert into req_des (des_id, req_content, start_time, 
      end_time, dep_req_op, be_req_op, 
      req_state, produce_id)
    values (#{desId,jdbcType=INTEGER}, #{reqContent,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=VARCHAR}, #{depReqOp,jdbcType=VARCHAR}, #{beReqOp,jdbcType=VARCHAR}, 
      #{reqState,jdbcType=INTEGER}, #{produceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.ReqDes">
    insert into req_des
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="desId != null">
        des_id,
      </if>
      <if test="reqContent != null">
        req_content,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="depReqOp != null">
        dep_req_op,
      </if>
      <if test="beReqOp != null">
        be_req_op,
      </if>
      <if test="reqState != null">
        req_state,
      </if>
      <if test="produceId != null">
        produce_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="desId != null">
        #{desId,jdbcType=INTEGER},
      </if>
      <if test="reqContent != null">
        #{reqContent,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="depReqOp != null">
        #{depReqOp,jdbcType=VARCHAR},
      </if>
      <if test="beReqOp != null">
        #{beReqOp,jdbcType=VARCHAR},
      </if>
      <if test="reqState != null">
        #{reqState,jdbcType=INTEGER},
      </if>
      <if test="produceId != null">
        #{produceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.ReqDesExample" resultType="java.lang.Long">
    select count(*) from req_des
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update req_des
    <set>
      <if test="record.desId != null">
        des_id = #{record.desId,jdbcType=INTEGER},
      </if>
      <if test="record.reqContent != null">
        req_content = #{record.reqContent,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.depReqOp != null">
        dep_req_op = #{record.depReqOp,jdbcType=VARCHAR},
      </if>
      <if test="record.beReqOp != null">
        be_req_op = #{record.beReqOp,jdbcType=VARCHAR},
      </if>
      <if test="record.reqState != null">
        req_state = #{record.reqState,jdbcType=INTEGER},
      </if>
      <if test="record.produceId != null">
        produce_id = #{record.produceId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update req_des
    set des_id = #{record.desId,jdbcType=INTEGER},
      req_content = #{record.reqContent,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      dep_req_op = #{record.depReqOp,jdbcType=VARCHAR},
      be_req_op = #{record.beReqOp,jdbcType=VARCHAR},
      req_state = #{record.reqState,jdbcType=INTEGER},
      produce_id = #{record.produceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>