<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.ContractnegotiationMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Contractnegotiation">
    <id column="contractId" jdbcType="INTEGER" property="contractid" />
    <result column="customerDemand" jdbcType="VARCHAR" property="customerdemand" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="range" jdbcType="DOUBLE" property="range" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contractId, customerDemand, state, range
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.ContractnegotiationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from contractNegotiation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contractNegotiation
    where contractId = #{contractid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contractNegotiation
    where contractId = #{contractid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.ContractnegotiationExample">
    delete from contractNegotiation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Contractnegotiation">
    insert into contractNegotiation (contractId, customerDemand, state, 
      range)
    values (#{contractid,jdbcType=INTEGER}, #{customerdemand,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{range,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Contractnegotiation">
    insert into contractNegotiation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractid != null">
        contractId,
      </if>
      <if test="customerdemand != null">
        customerDemand,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="range != null">
        range,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractid != null">
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="customerdemand != null">
        #{customerdemand,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="range != null">
        #{range,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.ContractnegotiationExample" resultType="java.lang.Long">
    select count(*) from contractNegotiation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contractNegotiation
    <set>
      <if test="record.contractid != null">
        contractId = #{record.contractid,jdbcType=INTEGER},
      </if>
      <if test="record.customerdemand != null">
        customerDemand = #{record.customerdemand,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.range != null">
        range = #{record.range,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contractNegotiation
    set contractId = #{record.contractid,jdbcType=INTEGER},
      customerDemand = #{record.customerdemand,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      range = #{record.range,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Contractnegotiation">
    update contractNegotiation
    <set>
      <if test="customerdemand != null">
        customerDemand = #{customerdemand,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="range != null">
        range = #{range,jdbcType=DOUBLE},
      </if>
    </set>
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Contractnegotiation">
    update contractNegotiation
    set customerDemand = #{customerdemand,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      range = #{range,jdbcType=DOUBLE}
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
</mapper>