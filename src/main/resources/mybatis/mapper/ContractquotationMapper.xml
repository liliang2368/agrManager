<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.ContractquotationMapper">
    <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Contractquotation">
        <id column="contractId" jdbcType="INTEGER" property="contractid"/>
        <result column="customerDemand" jdbcType="VARCHAR" property="customerdemand"/>
        <result column="solution" jdbcType="VARCHAR" property="solution"/>
        <result column="finPrice" jdbcType="DOUBLE" property="finprice"/>
        <result column="stats" jdbcType="INTEGER" property="stats"/>
    </resultMap>


    <select id="selectMaxContractid" resultType="com.ly.agrManader.dao.Interface.ContractquotationMapper">
    SELECT * FROM contractQuotation A WHERE A.contractId=(SELECT MAX(contractId) from contractQuotation);
  </select>


    <select id="selectSalesPriceSalesPriceAllCommodityDetails" resultType="com.ly.agrManader.web.management.request.SalesPriceRequest"
            parameterType="com.ly.agrManader.web.management.request.SalesPriceRequest">
        SELECT * from contractQuotation A LEFT JOIN prePrice B on A.contractId=B.preProductId
        <where>
            <if test="stats !=null">
                and A.stats=#{stats}
            </if>
        </where>
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    contractId, customerDemand, solution, finPrice, stats
  </sql>
    <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.ContractquotationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from contractQuotation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contractQuotation
        where contractId = #{contractid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contractQuotation
    where contractId = #{contractid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.ContractquotationExample">
        delete from contractQuotation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Contractquotation">
    insert into contractQuotation (contractId, customerDemand, solution, 
      finPrice, stats)
    values (#{contractid,jdbcType=INTEGER}, #{customerdemand,jdbcType=VARCHAR}, #{solution,jdbcType=VARCHAR}, 
      #{finprice,jdbcType=DOUBLE}, #{stats,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Contractquotation">
        insert into contractQuotation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractid != null">
                contractId,
            </if>
            <if test="customerdemand != null">
                customerDemand,
            </if>
            <if test="solution != null">
                solution,
            </if>
            <if test="finprice != null">
                finPrice,
            </if>
            <if test="stats != null">
                stats,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contractid != null">
                #{contractid,jdbcType=INTEGER},
            </if>
            <if test="customerdemand != null">
                #{customerdemand,jdbcType=VARCHAR},
            </if>
            <if test="solution != null">
                #{solution,jdbcType=VARCHAR},
            </if>
            <if test="finprice != null">
                #{finprice,jdbcType=DOUBLE},
            </if>
            <if test="stats != null">
                #{stats,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.ContractquotationExample"
            resultType="java.lang.Long">
        select count(*) from contractQuotation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contractQuotation
        <set>
            <if test="record.contractid != null">
                contractId = #{record.contractid,jdbcType=INTEGER},
            </if>
            <if test="record.customerdemand != null">
                customerDemand = #{record.customerdemand,jdbcType=VARCHAR},
            </if>
            <if test="record.solution != null">
                solution = #{record.solution,jdbcType=VARCHAR},
            </if>
            <if test="record.finprice != null">
                finPrice = #{record.finprice,jdbcType=DOUBLE},
            </if>
            <if test="record.stats != null">
                stats = #{record.stats,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contractQuotation
        set contractId = #{record.contractid,jdbcType=INTEGER},
        customerDemand = #{record.customerdemand,jdbcType=VARCHAR},
        solution = #{record.solution,jdbcType=VARCHAR},
        finPrice = #{record.finprice,jdbcType=DOUBLE},
        stats = #{record.stats,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Contractquotation">
        update contractQuotation
        <set>
            <if test="customerdemand != null">
                customerDemand = #{customerdemand,jdbcType=VARCHAR},
            </if>
            <if test="solution != null">
                solution = #{solution,jdbcType=VARCHAR},
            </if>
            <if test="finprice != null">
                finPrice = #{finprice,jdbcType=DOUBLE},
            </if>
            <if test="stats != null">
                stats = #{stats,jdbcType=INTEGER},
            </if>
        </set>
        where contractId = #{contractid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Contractquotation">
    update contractQuotation
    set customerDemand = #{customerdemand,jdbcType=VARCHAR},
      solution = #{solution,jdbcType=VARCHAR},
      finPrice = #{finprice,jdbcType=DOUBLE},
      stats = #{stats,jdbcType=INTEGER}
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
</mapper>