<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Commodity">
    <id column="commodityid" jdbcType="INTEGER" property="commodityid" />
    <result column="agriculturalproductsid" jdbcType="INTEGER" property="agriculturalproductsid" />
    <result column="commodityname" jdbcType="VARCHAR" property="commodityname" />
    <result column="measurementmethod" jdbcType="VARCHAR" property="measurementmethod" />
    <result column="storagemethodstoragemethod" jdbcType="VARCHAR" property="storagemethodstoragemethod" />
    <result column="qualityguaranteeperiod" jdbcType="VARCHAR" property="qualityguaranteeperiod" />
    <result column="minstock" jdbcType="INTEGER" property="minstock" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="maxstock" jdbcType="INTEGER" property="maxstock" />
    <result column="recommendstock" jdbcType="VARCHAR" property="recommendstock" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="costprice" jdbcType="DECIMAL" property="costprice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    commodityid, agriculturalproductsid, commodityname, measurementmethod, storagemethodstoragemethod, 
    qualityguaranteeperiod, minstock, stock, maxstock, recommendstock, price, grade, 
    costprice
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.CommodityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where commodityid = #{commodityid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodity
    where commodityid = #{commodityid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.CommodityExample">
    delete from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Commodity">
    insert into commodity (commodityid, agriculturalproductsid, 
      commodityname, measurementmethod, storagemethodstoragemethod, 
      qualityguaranteeperiod, minstock, stock, 
      maxstock, recommendstock, price, 
      grade, costprice)
    values (#{commodityid,jdbcType=INTEGER}, #{agriculturalproductsid,jdbcType=INTEGER}, 
      #{commodityname,jdbcType=VARCHAR}, #{measurementmethod,jdbcType=VARCHAR}, #{storagemethodstoragemethod,jdbcType=VARCHAR}, 
      #{qualityguaranteeperiod,jdbcType=VARCHAR}, #{minstock,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{maxstock,jdbcType=INTEGER}, #{recommendstock,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{grade,jdbcType=VARCHAR}, #{costprice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Commodity">
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityid != null">
        commodityid,
      </if>
      <if test="agriculturalproductsid != null">
        agriculturalproductsid,
      </if>
      <if test="commodityname != null">
        commodityname,
      </if>
      <if test="measurementmethod != null">
        measurementmethod,
      </if>
      <if test="storagemethodstoragemethod != null">
        storagemethodstoragemethod,
      </if>
      <if test="qualityguaranteeperiod != null">
        qualityguaranteeperiod,
      </if>
      <if test="minstock != null">
        minstock,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="maxstock != null">
        maxstock,
      </if>
      <if test="recommendstock != null">
        recommendstock,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="costprice != null">
        costprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityid != null">
        #{commodityid,jdbcType=INTEGER},
      </if>
      <if test="agriculturalproductsid != null">
        #{agriculturalproductsid,jdbcType=INTEGER},
      </if>
      <if test="commodityname != null">
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="measurementmethod != null">
        #{measurementmethod,jdbcType=VARCHAR},
      </if>
      <if test="storagemethodstoragemethod != null">
        #{storagemethodstoragemethod,jdbcType=VARCHAR},
      </if>
      <if test="qualityguaranteeperiod != null">
        #{qualityguaranteeperiod,jdbcType=VARCHAR},
      </if>
      <if test="minstock != null">
        #{minstock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="maxstock != null">
        #{maxstock,jdbcType=INTEGER},
      </if>
      <if test="recommendstock != null">
        #{recommendstock,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="costprice != null">
        #{costprice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.CommodityExample" resultType="java.lang.Long">
    select count(*) from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity
    <set>
      <if test="record.commodityid != null">
        commodityid = #{record.commodityid,jdbcType=INTEGER},
      </if>
      <if test="record.agriculturalproductsid != null">
        agriculturalproductsid = #{record.agriculturalproductsid,jdbcType=INTEGER},
      </if>
      <if test="record.commodityname != null">
        commodityname = #{record.commodityname,jdbcType=VARCHAR},
      </if>
      <if test="record.measurementmethod != null">
        measurementmethod = #{record.measurementmethod,jdbcType=VARCHAR},
      </if>
      <if test="record.storagemethodstoragemethod != null">
        storagemethodstoragemethod = #{record.storagemethodstoragemethod,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityguaranteeperiod != null">
        qualityguaranteeperiod = #{record.qualityguaranteeperiod,jdbcType=VARCHAR},
      </if>
      <if test="record.minstock != null">
        minstock = #{record.minstock,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.maxstock != null">
        maxstock = #{record.maxstock,jdbcType=INTEGER},
      </if>
      <if test="record.recommendstock != null">
        recommendstock = #{record.recommendstock,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.costprice != null">
        costprice = #{record.costprice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity
    set commodityid = #{record.commodityid,jdbcType=INTEGER},
      agriculturalproductsid = #{record.agriculturalproductsid,jdbcType=INTEGER},
      commodityname = #{record.commodityname,jdbcType=VARCHAR},
      measurementmethod = #{record.measurementmethod,jdbcType=VARCHAR},
      storagemethodstoragemethod = #{record.storagemethodstoragemethod,jdbcType=VARCHAR},
      qualityguaranteeperiod = #{record.qualityguaranteeperiod,jdbcType=VARCHAR},
      minstock = #{record.minstock,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      maxstock = #{record.maxstock,jdbcType=INTEGER},
      recommendstock = #{record.recommendstock,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      grade = #{record.grade,jdbcType=VARCHAR},
      costprice = #{record.costprice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Commodity">
    update commodity
    <set>
      <if test="agriculturalproductsid != null">
        agriculturalproductsid = #{agriculturalproductsid,jdbcType=INTEGER},
      </if>
      <if test="commodityname != null">
        commodityname = #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="measurementmethod != null">
        measurementmethod = #{measurementmethod,jdbcType=VARCHAR},
      </if>
      <if test="storagemethodstoragemethod != null">
        storagemethodstoragemethod = #{storagemethodstoragemethod,jdbcType=VARCHAR},
      </if>
      <if test="qualityguaranteeperiod != null">
        qualityguaranteeperiod = #{qualityguaranteeperiod,jdbcType=VARCHAR},
      </if>
      <if test="minstock != null">
        minstock = #{minstock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="maxstock != null">
        maxstock = #{maxstock,jdbcType=INTEGER},
      </if>
      <if test="recommendstock != null">
        recommendstock = #{recommendstock,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="costprice != null">
        costprice = #{costprice,jdbcType=DECIMAL},
      </if>
    </set>
    where commodityid = #{commodityid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Commodity">
    update commodity
    set agriculturalproductsid = #{agriculturalproductsid,jdbcType=INTEGER},
      commodityname = #{commodityname,jdbcType=VARCHAR},
      measurementmethod = #{measurementmethod,jdbcType=VARCHAR},
      storagemethodstoragemethod = #{storagemethodstoragemethod,jdbcType=VARCHAR},
      qualityguaranteeperiod = #{qualityguaranteeperiod,jdbcType=VARCHAR},
      minstock = #{minstock,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      maxstock = #{maxstock,jdbcType=INTEGER},
      recommendstock = #{recommendstock,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      grade = #{grade,jdbcType=VARCHAR},
      costprice = #{costprice,jdbcType=DECIMAL}
    where commodityid = #{commodityid,jdbcType=INTEGER}
  </update>
</mapper>