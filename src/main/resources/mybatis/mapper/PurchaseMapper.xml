<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.PurchaseMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Purchase">
    <id column="purchase_id" jdbcType="INTEGER" property="purchaseId" />
    <result column="purchase_produce" jdbcType="VARCHAR" property="purchaseProduce" />
    <result column="purchase_produce_code" jdbcType="VARCHAR" property="purchaseProduceCode" />
    <result column="purchase_state" jdbcType="VARCHAR" property="purchaseState" />
    <result column="purchase_produce_price" jdbcType="DECIMAL" property="purchaseProducePrice" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="quaity_state" jdbcType="INTEGER" property="quaityState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    purchase_id, purchase_produce, purchase_produce_code, purchase_state, purchase_produce_price, 
    type_id, supplier_id, quaity_state
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.PurchaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.PurchaseExample">
    delete from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Purchase">
    insert into purchase (purchase_id, purchase_produce, purchase_produce_code, 
      purchase_state, purchase_produce_price, type_id, 
      supplier_id, quaity_state)
    values (#{purchaseId,jdbcType=INTEGER}, #{purchaseProduce,jdbcType=VARCHAR}, #{purchaseProduceCode,jdbcType=VARCHAR}, 
      #{purchaseState,jdbcType=VARCHAR}, #{purchaseProducePrice,jdbcType=DECIMAL}, #{typeId,jdbcType=INTEGER}, 
      #{supplierId,jdbcType=INTEGER}, #{quaityState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Purchase">
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purchaseId != null">
        purchase_id,
      </if>
      <if test="purchaseProduce != null">
        purchase_produce,
      </if>
      <if test="purchaseProduceCode != null">
        purchase_produce_code,
      </if>
      <if test="purchaseState != null">
        purchase_state,
      </if>
      <if test="purchaseProducePrice != null">
        purchase_produce_price,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="quaityState != null">
        quaity_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purchaseId != null">
        #{purchaseId,jdbcType=INTEGER},
      </if>
      <if test="purchaseProduce != null">
        #{purchaseProduce,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProduceCode != null">
        #{purchaseProduceCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseState != null">
        #{purchaseState,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProducePrice != null">
        #{purchaseProducePrice,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="quaityState != null">
        #{quaityState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.PurchaseExample" resultType="java.lang.Long">
    select count(*) from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purchase
    <set>
      <if test="record.purchaseId != null">
        purchase_id = #{record.purchaseId,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseProduce != null">
        purchase_produce = #{record.purchaseProduce,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseProduceCode != null">
        purchase_produce_code = #{record.purchaseProduceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseState != null">
        purchase_state = #{record.purchaseState,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseProducePrice != null">
        purchase_produce_price = #{record.purchaseProducePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.quaityState != null">
        quaity_state = #{record.quaityState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purchase
    set purchase_id = #{record.purchaseId,jdbcType=INTEGER},
      purchase_produce = #{record.purchaseProduce,jdbcType=VARCHAR},
      purchase_produce_code = #{record.purchaseProduceCode,jdbcType=VARCHAR},
      purchase_state = #{record.purchaseState,jdbcType=VARCHAR},
      purchase_produce_price = #{record.purchaseProducePrice,jdbcType=DECIMAL},
      type_id = #{record.typeId,jdbcType=INTEGER},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      quaity_state = #{record.quaityState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Purchase">
    update purchase
    <set>
      <if test="purchaseProduce != null">
        purchase_produce = #{purchaseProduce,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProduceCode != null">
        purchase_produce_code = #{purchaseProduceCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseState != null">
        purchase_state = #{purchaseState,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProducePrice != null">
        purchase_produce_price = #{purchaseProducePrice,jdbcType=DECIMAL},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="quaityState != null">
        quaity_state = #{quaityState,jdbcType=INTEGER},
      </if>
    </set>
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Purchase">
    update purchase
    set purchase_produce = #{purchaseProduce,jdbcType=VARCHAR},
      purchase_produce_code = #{purchaseProduceCode,jdbcType=VARCHAR},
      purchase_state = #{purchaseState,jdbcType=VARCHAR},
      purchase_produce_price = #{purchaseProducePrice,jdbcType=DECIMAL},
      type_id = #{typeId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      quaity_state = #{quaityState,jdbcType=INTEGER}
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
</mapper>