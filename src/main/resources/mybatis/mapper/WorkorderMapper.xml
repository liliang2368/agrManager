<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.WorkorderMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Workorder">
    <id column="workOrderId" jdbcType="INTEGER" property="workorderid" />
    <result column="problemDescription" jdbcType="VARCHAR" property="problemdescription" />
    <result column="solution" jdbcType="VARCHAR" property="solution" />
    <result column="stats" jdbcType="VARCHAR" property="stats" />
    <result column="returnVisit" jdbcType="VARCHAR" property="returnvisit" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    workOrderId, problemDescription, solution, stats, returnVisit, amount
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.WorkorderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from workOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workOrder
    where workOrderId = #{workorderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from workOrder
    where workOrderId = #{workorderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.WorkorderExample">
    delete from workOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Workorder">
    insert into workOrder (workOrderId, problemDescription, 
      solution, stats, returnVisit, 
      amount)
    values (#{workorderid,jdbcType=INTEGER}, #{problemdescription,jdbcType=VARCHAR}, 
      #{solution,jdbcType=VARCHAR}, #{stats,jdbcType=VARCHAR}, #{returnvisit,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Workorder">
    insert into workOrder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workorderid != null">
        workOrderId,
      </if>
      <if test="problemdescription != null">
        problemDescription,
      </if>
      <if test="solution != null">
        solution,
      </if>
      <if test="stats != null">
        stats,
      </if>
      <if test="returnvisit != null">
        returnVisit,
      </if>
      <if test="amount != null">
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workorderid != null">
        #{workorderid,jdbcType=INTEGER},
      </if>
      <if test="problemdescription != null">
        #{problemdescription,jdbcType=VARCHAR},
      </if>
      <if test="solution != null">
        #{solution,jdbcType=VARCHAR},
      </if>
      <if test="stats != null">
        #{stats,jdbcType=VARCHAR},
      </if>
      <if test="returnvisit != null">
        #{returnvisit,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.WorkorderExample" resultType="java.lang.Long">
    select count(*) from workOrder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update workOrder
    <set>
      <if test="record.workorderid != null">
        workOrderId = #{record.workorderid,jdbcType=INTEGER},
      </if>
      <if test="record.problemdescription != null">
        problemDescription = #{record.problemdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.solution != null">
        solution = #{record.solution,jdbcType=VARCHAR},
      </if>
      <if test="record.stats != null">
        stats = #{record.stats,jdbcType=VARCHAR},
      </if>
      <if test="record.returnvisit != null">
        returnVisit = #{record.returnvisit,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update workOrder
    set workOrderId = #{record.workorderid,jdbcType=INTEGER},
      problemDescription = #{record.problemdescription,jdbcType=VARCHAR},
      solution = #{record.solution,jdbcType=VARCHAR},
      stats = #{record.stats,jdbcType=VARCHAR},
      returnVisit = #{record.returnvisit,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Workorder">
    update workOrder
    <set>
      <if test="problemdescription != null">
        problemDescription = #{problemdescription,jdbcType=VARCHAR},
      </if>
      <if test="solution != null">
        solution = #{solution,jdbcType=VARCHAR},
      </if>
      <if test="stats != null">
        stats = #{stats,jdbcType=VARCHAR},
      </if>
      <if test="returnvisit != null">
        returnVisit = #{returnvisit,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
    </set>
    where workOrderId = #{workorderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Workorder">
    update workOrder
    set problemDescription = #{problemdescription,jdbcType=VARCHAR},
      solution = #{solution,jdbcType=VARCHAR},
      stats = #{stats,jdbcType=VARCHAR},
      returnVisit = #{returnvisit,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE}
    where workOrderId = #{workorderid,jdbcType=INTEGER}
  </update>
</mapper>