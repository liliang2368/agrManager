<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.ExamineMapper">
  <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Examine">
    <id column="examine_id" jdbcType="INTEGER" property="examineId" />
    <result column="examine_name" jdbcType="VARCHAR" property="examineName" />
    <result column="examine_value" jdbcType="VARCHAR" property="examineValue" />
    <result column="examine_prodce_id" jdbcType="INTEGER" property="examineProdceId" />
    <result column="examine_real_value" jdbcType="VARCHAR" property="examineRealValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    examine_id, examine_name, examine_value, examine_prodce_id, examine_real_value
  </sql>
  <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.ExamineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from examine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from examine
    where examine_id = #{examineId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from examine
    where examine_id = #{examineId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.ExamineExample">
    delete from examine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Examine">
    insert into examine (examine_id, examine_name, examine_value, 
      examine_prodce_id, examine_real_value)
    values (#{examineId,jdbcType=INTEGER}, #{examineName,jdbcType=VARCHAR}, #{examineValue,jdbcType=VARCHAR}, 
      #{examineProdceId,jdbcType=INTEGER}, #{examineRealValue,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Examine">
    insert into examine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examineId != null">
        examine_id,
      </if>
      <if test="examineName != null">
        examine_name,
      </if>
      <if test="examineValue != null">
        examine_value,
      </if>
      <if test="examineProdceId != null">
        examine_prodce_id,
      </if>
      <if test="examineRealValue != null">
        examine_real_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examineId != null">
        #{examineId,jdbcType=INTEGER},
      </if>
      <if test="examineName != null">
        #{examineName,jdbcType=VARCHAR},
      </if>
      <if test="examineValue != null">
        #{examineValue,jdbcType=VARCHAR},
      </if>
      <if test="examineProdceId != null">
        #{examineProdceId,jdbcType=INTEGER},
      </if>
      <if test="examineRealValue != null">
        #{examineRealValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.ExamineExample" resultType="java.lang.Long">
    select count(*) from examine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update examine
    <set>
      <if test="record.examineId != null">
        examine_id = #{record.examineId,jdbcType=INTEGER},
      </if>
      <if test="record.examineName != null">
        examine_name = #{record.examineName,jdbcType=VARCHAR},
      </if>
      <if test="record.examineValue != null">
        examine_value = #{record.examineValue,jdbcType=VARCHAR},
      </if>
      <if test="record.examineProdceId != null">
        examine_prodce_id = #{record.examineProdceId,jdbcType=INTEGER},
      </if>
      <if test="record.examineRealValue != null">
        examine_real_value = #{record.examineRealValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update examine
    set examine_id = #{record.examineId,jdbcType=INTEGER},
      examine_name = #{record.examineName,jdbcType=VARCHAR},
      examine_value = #{record.examineValue,jdbcType=VARCHAR},
      examine_prodce_id = #{record.examineProdceId,jdbcType=INTEGER},
      examine_real_value = #{record.examineRealValue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Examine">
    update examine
    <set>
      <if test="examineName != null">
        examine_name = #{examineName,jdbcType=VARCHAR},
      </if>
      <if test="examineValue != null">
        examine_value = #{examineValue,jdbcType=VARCHAR},
      </if>
      <if test="examineProdceId != null">
        examine_prodce_id = #{examineProdceId,jdbcType=INTEGER},
      </if>
      <if test="examineRealValue != null">
        examine_real_value = #{examineRealValue,jdbcType=VARCHAR},
      </if>
    </set>
    where examine_id = #{examineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Examine">
    update examine
    set examine_name = #{examineName,jdbcType=VARCHAR},
      examine_value = #{examineValue,jdbcType=VARCHAR},
      examine_prodce_id = #{examineProdceId,jdbcType=INTEGER},
      examine_real_value = #{examineRealValue,jdbcType=VARCHAR}
    where examine_id = #{examineId,jdbcType=INTEGER}
  </update>
</mapper>