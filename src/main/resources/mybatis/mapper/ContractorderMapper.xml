<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.agrManader.dao.Interface.ContractorderMapper">
    <resultMap id="BaseResultMap" type="com.ly.agrManader.dao.bo.Contractorder">
        <id column="contractId" jdbcType="INTEGER" property="contractid"/>
        <result column="examine" jdbcType="INTEGER" property="examine"/>
        <result column="preAmount" jdbcType="INTEGER" property="preamount"/>
        <result column="finAmount" jdbcType="INTEGER" property="finamount"/>
        <result column="paymentState" jdbcType="INTEGER" property="paymentstate"/>
        <result column="qualityState" jdbcType="INTEGER" property="qualitystate"/>
        <result column="warehous" jdbcType="INTEGER" property="warehous"/>
        <result column="orderProcess" jdbcType="INTEGER" property="orderprocess"/>
        <result column="customerId" jdbcType="INTEGER" property="customerid"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
    </resultMap>

    <!--  插入并且返回主键-->
    <insert id="insertAndReturnKey" parameterType="com.ly.agrManader.dao.bo.Contractorder" useGeneratedKeys="true"
            keyProperty="contractId" keyColumn="contractId">
     insert into contractOrder ( examine, preAmount,
      finAmount, paymentState, qualityState,
      warehous, orderProcess, customerId,
      time)
    values ( #{examine,jdbcType=INTEGER}, #{preamount,jdbcType=INTEGER},
      #{finamount,jdbcType=INTEGER}, #{paymentstate,jdbcType=INTEGER}, #{qualitystate,jdbcType=INTEGER},
      #{warehous,jdbcType=INTEGER}, #{orderprocess,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER},
      #{time,jdbcType=TIMESTAMP})
  </insert>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    contractId, examine, preAmount, finAmount, paymentState, qualityState, warehous, 
    orderProcess, customerId, time
  </sql>
    <select id="selectByExample" parameterType="com.ly.agrManader.dao.bo.ContractorderExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from contractOrder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contractOrder
        where contractId = #{contractid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contractOrder
    where contractId = #{contractid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.ly.agrManader.dao.bo.ContractorderExample">
        delete from contractOrder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ly.agrManader.dao.bo.Contractorder">
    insert into contractOrder (contractId, examine, preAmount, 
      finAmount, paymentState, qualityState, 
      warehous, orderProcess, customerId, 
      time)
    values (#{contractid,jdbcType=INTEGER}, #{examine,jdbcType=INTEGER}, #{preamount,jdbcType=INTEGER}, 
      #{finamount,jdbcType=INTEGER}, #{paymentstate,jdbcType=INTEGER}, #{qualitystate,jdbcType=INTEGER}, 
      #{warehous,jdbcType=INTEGER}, #{orderprocess,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.ly.agrManader.dao.bo.Contractorder">
        insert into contractOrder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractid != null">
                contractId,
            </if>
            <if test="examine != null">
                examine,
            </if>
            <if test="preamount != null">
                preAmount,
            </if>
            <if test="finamount != null">
                finAmount,
            </if>
            <if test="paymentstate != null">
                paymentState,
            </if>
            <if test="qualitystate != null">
                qualityState,
            </if>
            <if test="warehous != null">
                warehous,
            </if>
            <if test="orderprocess != null">
                orderProcess,
            </if>
            <if test="customerid != null">
                customerId,
            </if>
            <if test="time != null">
                time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contractid != null">
                #{contractid,jdbcType=INTEGER},
            </if>
            <if test="examine != null">
                #{examine,jdbcType=INTEGER},
            </if>
            <if test="preamount != null">
                #{preamount,jdbcType=INTEGER},
            </if>
            <if test="finamount != null">
                #{finamount,jdbcType=INTEGER},
            </if>
            <if test="paymentstate != null">
                #{paymentstate,jdbcType=INTEGER},
            </if>
            <if test="qualitystate != null">
                #{qualitystate,jdbcType=INTEGER},
            </if>
            <if test="warehous != null">
                #{warehous,jdbcType=INTEGER},
            </if>
            <if test="orderprocess != null">
                #{orderprocess,jdbcType=INTEGER},
            </if>
            <if test="customerid != null">
                #{customerid,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ly.agrManader.dao.bo.ContractorderExample"
            resultType="java.lang.Long">
        select count(*) from contractOrder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contractOrder
        <set>
            <if test="record.contractid != null">
                contractId = #{record.contractid,jdbcType=INTEGER},
            </if>
            <if test="record.examine != null">
                examine = #{record.examine,jdbcType=INTEGER},
            </if>
            <if test="record.preamount != null">
                preAmount = #{record.preamount,jdbcType=INTEGER},
            </if>
            <if test="record.finamount != null">
                finAmount = #{record.finamount,jdbcType=INTEGER},
            </if>
            <if test="record.paymentstate != null">
                paymentState = #{record.paymentstate,jdbcType=INTEGER},
            </if>
            <if test="record.qualitystate != null">
                qualityState = #{record.qualitystate,jdbcType=INTEGER},
            </if>
            <if test="record.warehous != null">
                warehous = #{record.warehous,jdbcType=INTEGER},
            </if>
            <if test="record.orderprocess != null">
                orderProcess = #{record.orderprocess,jdbcType=INTEGER},
            </if>
            <if test="record.customerid != null">
                customerId = #{record.customerid,jdbcType=INTEGER},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contractOrder
        set contractId = #{record.contractid,jdbcType=INTEGER},
        examine = #{record.examine,jdbcType=INTEGER},
        preAmount = #{record.preamount,jdbcType=INTEGER},
        finAmount = #{record.finamount,jdbcType=INTEGER},
        paymentState = #{record.paymentstate,jdbcType=INTEGER},
        qualityState = #{record.qualitystate,jdbcType=INTEGER},
        warehous = #{record.warehous,jdbcType=INTEGER},
        orderProcess = #{record.orderprocess,jdbcType=INTEGER},
        customerId = #{record.customerid,jdbcType=INTEGER},
        time = #{record.time,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ly.agrManader.dao.bo.Contractorder">
        update contractOrder
        <set>
            <if test="examine != null">
                examine = #{examine,jdbcType=INTEGER},
            </if>
            <if test="preamount != null">
                preAmount = #{preamount,jdbcType=INTEGER},
            </if>
            <if test="finamount != null">
                finAmount = #{finamount,jdbcType=INTEGER},
            </if>
            <if test="paymentstate != null">
                paymentState = #{paymentstate,jdbcType=INTEGER},
            </if>
            <if test="qualitystate != null">
                qualityState = #{qualitystate,jdbcType=INTEGER},
            </if>
            <if test="warehous != null">
                warehous = #{warehous,jdbcType=INTEGER},
            </if>
            <if test="orderprocess != null">
                orderProcess = #{orderprocess,jdbcType=INTEGER},
            </if>
            <if test="customerid != null">
                customerId = #{customerid,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where contractId = #{contractid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ly.agrManader.dao.bo.Contractorder">
    update contractOrder
    set examine = #{examine,jdbcType=INTEGER},
      preAmount = #{preamount,jdbcType=INTEGER},
      finAmount = #{finamount,jdbcType=INTEGER},
      paymentState = #{paymentstate,jdbcType=INTEGER},
      qualityState = #{qualitystate,jdbcType=INTEGER},
      warehous = #{warehous,jdbcType=INTEGER},
      orderProcess = #{orderprocess,jdbcType=INTEGER},
      customerId = #{customerid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
</mapper>